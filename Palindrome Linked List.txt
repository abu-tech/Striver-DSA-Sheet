    ListNode* middle(ListNode *head){
        ListNode *slow = head, *fast = head;
        while (fast->next && fast->next->next){
            slow = slow->next;
            fast = fast->next->next;
        }
        return slow;
    }
    
    ListNode* reverse(ListNode *head){
        ListNode *prev = NULL, *next = NULL;
        while (head){
            next = head->next;
            head->next = prev;
            prev = head;
            head = next;
        }
        return prev;
    } 
    
    bool isPalindrome(ListNode* head) {
        if (head == NULL) return true;
        ListNode *mid = middle(head);
        mid->next = reverse(mid->next);
        ListNode *dummy = head;
        mid = mid->next;
        while (mid){
            if (mid->val != dummy->val) return false;
            mid = mid->next;
            dummy = dummy->next;
        }
        return true;
    }